# Describe in English what this program does
# Write C code to implement the same functionality.

    irmovq  array, %rcx       # put address of array in %rcx
    irmovq  8, %rsi           # put 8 into %rsi
    xorq    %rax, %rax        # XORQ with yourself sets the value to 0 (wipes the register)
loop:
    mrmovq  0(%rcx), %rbx     # move the first value at array into　％rbx
    irmovq  -1, %rdi          # put -1 into %rdi 
    subq    %rbx, %rdi        # %rdi = %rdi - %rbx which is (-1 - value at array) and -1 denotes the end of the array
    je      done              # if value at array is -1 (I.E. the end) go back to start of loop
    addq    %rbx, %rax        # %rax = %rax + %rbx
    addq    %rsi, %rcx        # %rcx = %rcx + %rsi
    jmp     loop              # 
    
done:
    halt

.pos 0x2000
array:
.quad   42
.quad   3
.quad   100
.quad   -10
.quad   15
.quad   27
.quad   -1

The C program:
long array = {42, 3, 199, 019, 15, 27, -1}
long sum = 0
for (long* i = array; *i != -1; i++) {
    sum += = *i;
}